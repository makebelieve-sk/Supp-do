[{"D:\\dev\\supp-do\\client\\src\\index.js":"1","D:\\dev\\supp-do\\client\\src\\reportWebVitals.js":"2","D:\\dev\\supp-do\\client\\src\\App.js":"3","D:\\dev\\supp-do\\client\\src\\redux\\store.js":"4","D:\\dev\\supp-do\\client\\src\\redux\\reducer.js":"5","D:\\dev\\supp-do\\client\\src\\redux\\initialState.js":"6","D:\\dev\\supp-do\\client\\src\\redux\\actionCreators.js":"7","D:\\dev\\supp-do\\client\\src\\datatable.options\\datatable.options.js":"8","D:\\dev\\supp-do\\client\\src\\components\\tabs\\professionTab.js":"9","D:\\dev\\supp-do\\client\\src\\hooks\\http.hook.js":"10","D:\\dev\\supp-do\\client\\src\\datatable.options\\datatable.columns.js":"11","D:\\dev\\supp-do\\client\\src\\components\\tabs\\personTab.js":"12","D:\\dev\\supp-do\\client\\src\\components\\tabs\\departmentTab.js":"13","D:\\dev\\supp-do\\client\\src\\components\\pages\\mainPage.js":"14","D:\\dev\\supp-do\\client\\src\\components\\authComponents\\authComponent.js":"15","D:\\dev\\supp-do\\client\\src\\components\\authComponents\\regComponent.js":"16","D:\\dev\\supp-do\\client\\src\\components\\authComponents\\changePassword.js":"17","D:\\dev\\supp-do\\client\\src\\components\\pages\\authPage.js":"18","D:\\dev\\supp-do\\client\\src\\components\\contentComponent\\treeComponent.js":"19","D:\\dev\\supp-do\\client\\src\\components\\contentComponent\\datatableComponent.js":"20","D:\\dev\\supp-do\\client\\src\\components\\contentComponent\\headerDatatable.js":"21","D:\\dev\\supp-do\\client\\src\\components\\helpers\\contentTab.js":"22","D:\\dev\\supp-do\\client\\src\\components\\contentComponent\\buttonsDatatable.js":"23","D:\\dev\\supp-do\\client\\src\\hooks\\routes.hook.js":"24","D:\\dev\\supp-do\\client\\src\\hooks\\auth.hook.js":"25","D:\\dev\\supp-do\\client\\src\\context\\authContext.js":"26","D:\\dev\\supp-do\\client\\src\\components\\helpers\\dataTableMap.helper.js":"27","D:\\dev\\supp-do\\client\\src\\components\\helpers\\rowFunctions.helper.js":"28","D:\\dev\\supp-do\\client\\src\\redux\\actionsConstants.js":"29"},{"size":353,"mtime":1611647752060,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":1090,"mtime":1612244448264,"results":"33","hashOfConfig":"31"},{"size":132,"mtime":1610607682395,"results":"34","hashOfConfig":"31"},{"size":4125,"mtime":1612274946316,"results":"35","hashOfConfig":"31"},{"size":491,"mtime":1612270751739,"results":"36","hashOfConfig":"31"},{"size":4028,"mtime":1612274946266,"results":"37","hashOfConfig":"31"},{"size":1624,"mtime":1612244523032,"results":"38","hashOfConfig":"31"},{"size":8905,"mtime":1612275991204,"results":"39","hashOfConfig":"31"},{"size":1441,"mtime":1611672733157,"results":"40","hashOfConfig":"31"},{"size":4853,"mtime":1612265128574,"results":"41","hashOfConfig":"31"},{"size":16695,"mtime":1612276370280,"results":"42","hashOfConfig":"31"},{"size":10881,"mtime":1612276370253,"results":"43","hashOfConfig":"31"},{"size":12774,"mtime":1612277021586,"results":"44","hashOfConfig":"31"},{"size":3715,"mtime":1611936672182,"results":"45","hashOfConfig":"31"},{"size":3961,"mtime":1611936672269,"results":"46","hashOfConfig":"31"},{"size":3732,"mtime":1611659720358,"results":"47","hashOfConfig":"31"},{"size":774,"mtime":1611749854383,"results":"48","hashOfConfig":"31"},{"size":2790,"mtime":1612255868134,"results":"49","hashOfConfig":"31"},{"size":5226,"mtime":1612274585532,"results":"50","hashOfConfig":"31"},{"size":836,"mtime":1612183231084,"results":"51","hashOfConfig":"31"},{"size":1501,"mtime":1612275292039,"results":"52","hashOfConfig":"31"},{"size":3863,"mtime":1612183939464,"results":"53","hashOfConfig":"31"},{"size":1081,"mtime":1611673279963,"results":"54","hashOfConfig":"31"},{"size":1468,"mtime":1611750571061,"results":"55","hashOfConfig":"31"},{"size":231,"mtime":1611936809061,"results":"56","hashOfConfig":"31"},{"size":2401,"mtime":1612270751938,"results":"57","hashOfConfig":"31"},{"size":3187,"mtime":1612277021635,"results":"58","hashOfConfig":"31"},{"size":1296,"mtime":1612270751649,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"163cvxv",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"D:\\dev\\supp-do\\client\\src\\index.js",[],["120","121"],"D:\\dev\\supp-do\\client\\src\\reportWebVitals.js",[],"D:\\dev\\supp-do\\client\\src\\App.js",[],"D:\\dev\\supp-do\\client\\src\\redux\\store.js",[],"D:\\dev\\supp-do\\client\\src\\redux\\reducer.js",[],"D:\\dev\\supp-do\\client\\src\\redux\\initialState.js",[],"D:\\dev\\supp-do\\client\\src\\redux\\actionCreators.js",[],"D:\\dev\\supp-do\\client\\src\\datatable.options\\datatable.options.js",[],"D:\\dev\\supp-do\\client\\src\\components\\tabs\\professionTab.js",[],"D:\\dev\\supp-do\\client\\src\\hooks\\http.hook.js",[],"D:\\dev\\supp-do\\client\\src\\datatable.options\\datatable.columns.js",[],"D:\\dev\\supp-do\\client\\src\\components\\tabs\\personTab.js",["122"],"import React, {useEffect, useState} from 'react';\r\nimport {Card, Form, Input, Row, Button, message, Select, Col, Skeleton} from 'antd';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\n\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport ActionCreator from \"../../redux/actionCreators\";\r\nimport {\r\n    CheckOutlined,\r\n    DeleteOutlined,\r\n    PlusOutlined,\r\n    PrinterOutlined,\r\n    StopOutlined\r\n} from \"@ant-design/icons\";\r\nimport {ProfessionTab} from \"./professionTab\";\r\nimport {DepartmentTab} from \"./departmentTab\";\r\n\r\nconst {Meta} = Card;\r\n\r\nexport const PersonTab = ({add, specKey, onRemove, loadingData, tabData}) => {\r\n    // Получение функции создания запросов на сервер, состояний загрузки/загрузки при удалении элемента и ошибки,\r\n    // очищения ошибки\r\n    const {request, loadingDelete, error, clearError} = useHttp();\r\n\r\n    // Получение списков подразделений, профессий, вкладок, порсонала и загрузки записи из хранилища redux\r\n    const {people, professions, departments, tabs, loadingSkeleton} = useSelector((state) => ({\r\n        people: state.people,\r\n        professions: state.professions,\r\n        departments: state.departments,\r\n        tabs: state.tabs,\r\n        loadingSkeleton: state.loadingSkeleton\r\n    }));\r\n    const dispatch = useDispatch();\r\n\r\n    // Создание стейта для значений в выпадающих списках \"Подразделения\" и \"Персонал\", начальных значений\r\n    // и показа спиннера загрузки при сохранении\r\n    const [selectDep, setSelectDep] = useState(null);\r\n    const [selectProfession, setSelectProfession] = useState(null);\r\n    const [departmentsToOptions, setDepartmentsToOptions] = useState([]);\r\n    const [professionsToOptions, setProfessionsToOptions] = useState([]);\r\n    const [loadingSave, setLoadingSave] = useState(false);\r\n\r\n    let initialDepartment = null;\r\n    let initialProfession = null;\r\n    let initialDepartmentName = '';\r\n    let initialProfName = '';\r\n    let initialName = '';\r\n    let initialNotes = '';\r\n    let initialTabNumber = '';\r\n\r\n    // Инициализация хука useForm() от Form antd\r\n    const [form] = Form.useForm();\r\n\r\n    // Если вкладка редактирования, то устанавливаем начальные значения для выпадающих списков\r\n    if (tabData) {\r\n        initialName = tabData.name;\r\n        initialNotes = tabData.notes;\r\n        initialTabNumber = tabData.tabNumber;\r\n\r\n        if (tabData.department && tabData.profession) {\r\n            initialDepartment = tabData.department;\r\n            initialProfession = tabData.profession;\r\n\r\n            initialDepartmentName = tabData.department.name;\r\n            initialProfName = tabData.profession.name;\r\n        }\r\n    }\r\n\r\n    // Обновление выпадающих списков\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            const dataDepartments = await request('/api/directory/departments');\r\n            const dataProfessions = await request('/api/directory/professions');\r\n\r\n            let departmentsToOptions = [{label: 'Не выбрано', value: ''}];\r\n            let professionsToOptions = [{label: 'Не выбрано', value: ''}];\r\n\r\n            if (dataDepartments) {\r\n                dataDepartments.forEach((department) => {\r\n                    let object = {\r\n                        label: department.name,\r\n                        value: department.name\r\n                    }\r\n\r\n                    departmentsToOptions.push(object);\r\n                })\r\n            }\r\n            if (dataProfessions) {\r\n                dataProfessions.forEach((prof) => {\r\n                    let object = {\r\n                        label: prof.name,\r\n                        value: prof.name\r\n                    }\r\n\r\n                    professionsToOptions.push(object);\r\n                })\r\n            }\r\n\r\n            setDepartmentsToOptions(departmentsToOptions);\r\n            setProfessionsToOptions(professionsToOptions);\r\n        }\r\n\r\n        getData();\r\n    }, [request, departments, professions]);\r\n\r\n    // Установка начального значения выпадающего списка, если вкладка редактируется\r\n    useEffect(() => {\r\n        form.setFieldsValue({name: initialName, notes: initialNotes, tabNumber: initialTabNumber, department: initialDepartmentName, profession: initialProfName});\r\n    }, [form, initialDepartmentName, initialProfName]);\r\n\r\n    // При появлении ошибки, инициализируем окно вывода этой ошибки\r\n    useEffect(() => {\r\n        if (error) {\r\n            message.error(error);\r\n        }\r\n\r\n        clearError();\r\n    }, [dispatch, error, request, clearError]);\r\n\r\n    let title = !tabData ? 'Создание записи о сотруднике' : 'Редактирование записи о сотруднике';\r\n\r\n    // Функция сохранения записи\r\n    const onSave = async (values) => {\r\n        try {\r\n            setLoadingSave(true);\r\n\r\n            values.department = selectDep ? selectDep : initialDepartment;\r\n            values.profession = selectProfession ? selectProfession : initialProfession;\r\n\r\n            let method = !tabData ? 'POST' : 'PUT';\r\n            let body = !tabData ? values : {tabData, values};\r\n\r\n            const data = await request('/api/directory/people', method, body);\r\n\r\n            if (data) {\r\n                setLoadingSave(false);\r\n\r\n                message.success(data.message);\r\n\r\n                // Удаление текущей вкладки\r\n                onRemove(specKey, 'remove');\r\n\r\n                // Если это редактирование записи, то происходит изменение записи в хранилище redux,\r\n                // иначе происходит запись новой записи в хранилище redux\r\n                !tabData ? dispatch(ActionCreator.createPerson(data.person)) :\r\n                    people.forEach((pers, index) => {\r\n                        if (pers._id === data.person._id) {\r\n                            dispatch(ActionCreator.editPerson(index, data.person));\r\n                        }\r\n                    });\r\n            }\r\n        } catch (e) {\r\n        }\r\n    };\r\n\r\n    // Функция удаления записи\r\n    const deleteHandler = async () => {\r\n        try {\r\n            if (tabData) {\r\n                const data = await request('/api/directory/people', 'DELETE', tabData);\r\n\r\n                if (data) {\r\n                    message.success(data.message);\r\n                    // Удаление текущей вкладки\r\n                    onRemove(specKey, 'remove');\r\n\r\n                    // Удаляем запись из хранилища redux\r\n                    people.forEach((pers, index) => {\r\n                        if (pers._id === tabData._id) {\r\n                            dispatch(ActionCreator.deletePerson(index));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n        }\r\n    };\r\n\r\n    // Вывод сообщения валидации формы\r\n    const onFinishFailed = () => {\r\n        message.error('Заполните обязательные поля');\r\n    };\r\n\r\n    // Функция нажатия на кнопку \"Отмена\"\r\n    const cancelHandler = () => {\r\n        onRemove(specKey, 'remove');\r\n    }\r\n\r\n    // Изменение значения в выпадающем списке \"Подразделение\", и сохранение этого значения в стейте\r\n    const handleChangeDepartment = (value) => {\r\n        if (departments && departments.length > 0) {\r\n            let department = departments.find((department) => {\r\n                return department.name === value;\r\n            });\r\n\r\n            if (department) {\r\n                setSelectDep(department);\r\n            }\r\n        }\r\n\r\n        form.setFieldsValue({department: value});\r\n    };\r\n\r\n    // Изменение значения в выпадающем списке \"Персонал\", и сохранение этого значения в стейте\r\n    const handleChangeProfession = (value) => {\r\n        if (professions && professions.length > 0) {\r\n            let prof = professions.find((prf) => {\r\n                return prf.name === value;\r\n            });\r\n\r\n            if (professions) {\r\n                setSelectProfession(prof);\r\n            }\r\n        }\r\n\r\n        form.setFieldsValue({profession: value});\r\n    };\r\n\r\n    return (\r\n        <Row className=\"container-tab\" justify=\"center\">\r\n            <Col sm={{span: 24}} md={{span: 20}} lg={{span: 16}} xl={{span: 12}}>\r\n                <Card className=\"card-style\" bordered>\r\n                    <Skeleton loading={loadingSkeleton} active>\r\n                        <Meta\r\n                            title={title}\r\n                            description={\r\n                                <Form labelCol={{span: 6}} wrapperCol={{span: 18}} style={{marginTop: '5%'}} form={form}\r\n                                      name=\"control-ref-person\"\r\n                                      onFinish={onSave} onFinishFailed={onFinishFailed}>\r\n                                    <Form.Item\r\n                                        label=\"ФИО\"\r\n                                        name=\"name\"\r\n                                        initialValue={!tabData ? '' : tabData.name}\r\n                                        rules={[{required: true, message: 'Введите ФИО сотрудника!',}]}\r\n                                    >\r\n                                        <Input maxLength={255} type=\"text\"/>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item label=\"Подразделение\">\r\n                                        <Row gutter={8}>\r\n                                            <Col xs={{span: 20}} sm={{span: 20}} md={{span: 22}} lg={{span: 22}}\r\n                                                 xl={{span: 22}}>\r\n                                                <Form.Item\r\n                                                    name=\"department\"\r\n                                                    noStyle\r\n                                                    rules={[{required: true, message: 'Выберите подразделение!'}]}\r\n                                                >\r\n                                                    <Select options={departmentsToOptions}\r\n                                                            onChange={handleChangeDepartment}/>\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={{span: 4}} sm={{span: 4}} md={{span: 2}} lg={{span: 2}}\r\n                                                 xl={{span: 2}}>\r\n                                                <Button\r\n                                                    style={{width: '100%'}}\r\n                                                    onClick={() => add('Создание подразделения', DepartmentTab, 'newDepartment', tabs, null)}\r\n                                                    icon={<PlusOutlined/>}\r\n                                                    type=\"secondary\"\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item label=\"Профессия\">\r\n                                        <Row gutter={8}>\r\n                                            <Col xs={{span: 20}} sm={{span: 20}} md={{span: 22}} lg={{span: 22}}\r\n                                                 xl={{span: 22}}>\r\n                                                <Form.Item\r\n                                                    name=\"profession\"\r\n                                                    noStyle\r\n                                                    rules={[{required: true, message: 'Выберите сотрудника!'}]}\r\n                                                >\r\n                                                    <Select options={professionsToOptions}\r\n                                                            onChange={handleChangeProfession}/>\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={{span: 4}} sm={{span: 4}} md={{span: 2}} lg={{span: 2}}\r\n                                                 xl={{span: 2}}>\r\n                                                <Button\r\n                                                    style={{width: '100%'}}\r\n                                                    onClick={() => add('Создание профессии', ProfessionTab, 'newProfession', tabs, null)}\r\n                                                    icon={<PlusOutlined/>}\r\n                                                    type=\"secondary\"\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        name=\"tabNumber\"\r\n                                        label=\"Таб. номер\"\r\n                                        initialValue={!tabData ? '' : tabData.tabNumber}\r\n                                    >\r\n                                        <Input maxLength={255} type=\"number\" style={{textAlign: 'right'}}/>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        name=\"notes\"\r\n                                        label=\"Примечание\"\r\n                                        initialValue={!tabData ? '' : tabData.notes}\r\n                                    >\r\n                                        <Input maxLength={255} type=\"text\"/>\r\n                                    </Form.Item>\r\n\r\n                                    <Row justify=\"end\" style={{marginTop: 20}} xs={{gutter: [8, 8]}}>\r\n                                        <Button className=\"button-style\" type=\"primary\" htmlType=\"submit\"\r\n                                                loading={loadingSave}\r\n                                                icon={<CheckOutlined/>}>\r\n                                            Сохранить\r\n                                        </Button>\r\n                                        {!tabData ? null :\r\n                                            <>\r\n                                                <Button className=\"button-style\" type=\"danger\" onClick={deleteHandler}\r\n                                                        loading={loadingDelete} icon={<DeleteOutlined/>}>\r\n                                                    Удалить\r\n                                                </Button>\r\n                                                <Button className=\"button-style\" type=\"secondary\"\r\n                                                        onClick={() => alert(1)}\r\n                                                        icon={<PrinterOutlined/>}>\r\n                                                    Печать\r\n                                                </Button>\r\n                                            </>\r\n                                        }\r\n                                        <Button className=\"button-style\" type=\"secondary\" onClick={cancelHandler}\r\n                                                icon={<StopOutlined/>}>\r\n                                            Отмена\r\n                                        </Button>\r\n                                    </Row>\r\n                                </Form>\r\n                            }\r\n                        />\r\n                    </Skeleton>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","D:\\dev\\supp-do\\client\\src\\components\\tabs\\departmentTab.js",[],"D:\\dev\\supp-do\\client\\src\\components\\pages\\mainPage.js",[],"D:\\dev\\supp-do\\client\\src\\components\\authComponents\\authComponent.js",[],"D:\\dev\\supp-do\\client\\src\\components\\authComponents\\regComponent.js",[],"D:\\dev\\supp-do\\client\\src\\components\\authComponents\\changePassword.js",[],"D:\\dev\\supp-do\\client\\src\\components\\pages\\authPage.js",[],"D:\\dev\\supp-do\\client\\src\\components\\contentComponent\\treeComponent.js",[],"D:\\dev\\supp-do\\client\\src\\components\\contentComponent\\datatableComponent.js",[],"D:\\dev\\supp-do\\client\\src\\components\\contentComponent\\headerDatatable.js",[],"D:\\dev\\supp-do\\client\\src\\components\\helpers\\contentTab.js",[],"D:\\dev\\supp-do\\client\\src\\components\\contentComponent\\buttonsDatatable.js",[],"D:\\dev\\supp-do\\client\\src\\hooks\\routes.hook.js",[],"D:\\dev\\supp-do\\client\\src\\hooks\\auth.hook.js",[],"D:\\dev\\supp-do\\client\\src\\context\\authContext.js",[],"D:\\dev\\supp-do\\client\\src\\components\\helpers\\dataTableMap.helper.js",[],"D:\\dev\\supp-do\\client\\src\\components\\helpers\\rowFunctions.helper.js",[],"D:\\dev\\supp-do\\client\\src\\redux\\actionsConstants.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":108,"column":8,"nodeType":"129","endLine":108,"endColumn":54,"suggestions":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initialName', 'initialNotes', and 'initialTabNumber'. Either include them or remove the dependency array.","ArrayExpression",["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},"Update the dependencies array to be: [form, initialDepartmentName, initialName, initialNotes, initialProfName, initialTabNumber]",{"range":"136","text":"137"},[4244,4290],"[form, initialDepartmentName, initialName, initialNotes, initialProfName, initialTabNumber]"]